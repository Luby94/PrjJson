<div id="comments-list">
  {{ #commentDtos }}
  <!-- comments-{{id}} : commentDtos.id → 서버에서 받아올 값 -->
  <!-- m-2 : margin, 기준의 50% & mb-3 : margin bottom 3 -->
  <div class="card m-2" id="comments-{{id}}">
    <div class="card-header">
      {{nickname}}&nbsp;&nbsp;&nbsp;
      <!-- Button trigger modal → 댓글 수정버튼 -->
      <!-- <button type="button" class="btn btn-sm btn-outline-primary">수정</button>&nbsp; -->
      <button type="button"
       class="btn btn-sm btn-outline-primary"
       
       data-bs-toggle="modal"
       data-bs-target="#comment-edit-modal"
       data-bs-id="{{id}}"
       data-bs-nickname="{{nickname}}"
       data-bs-body="{{body}}"
       data-bs-article-id="{{articleId}}"
       
      >수정</button>&nbsp;
      
      <!-- 댓글 삭제 버튼 -->
      <button type="button" class="btn btn-sm btn-outline-danger comment-delete-btn">삭제</button>
      
      ( {{ id }}, {{ articleId }} )
      
    </div>
    <div class="card-body">
      {{body}}
    </div>
  </div>
  {{ /commentDtos }}
</div>



<!-- Modal -->
<!-- https://getbootstrap.kr/docs/5.0/components/modal/ 의 Part:라이브 데모 -->

<div class="modal fade" id="comment-edit-modal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
    
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">댓글 수정</h5>
        <button type="button"
                class="btn-close"
                data-bs-dismiss="modal"
                aria-label="Close"></button>
      </div>
      
      <!-- 수정화면 -->
      <div class="modal-body">
        <!-- 댓글 수정 폼 -->
        <form>
          <!-- 댓글 id, article_id 둘 다 필요 → Comments 테이블에 필요한 파라미터 → 둘 다 hidden 으로 전송 -->
          <input type="hidden" id="edit-comment-id" value="id" />
          <input type="hidden" id="edit-comment-article-id" value="article_id" />
          
          <!-- 닉네임 -->
          <div class="mb-3">
            <label class="form-label">닉네임</label>
            <input type="text" class="form-control" id="edit-comment-nickname" />
          </div>
          
          <!-- 댓글 본문 -->
          <div class="mb-3">
            <label class="form-label">댓글 본문</label>
            <textarea type="text" class="form-control" rows="3"
             id="edit-comment-body"></textarea>
          </div>

          <!-- 전송 버튼 -->
          <!-- 아래 footer 에 Save changes 버튼 있으니 주석처리
          <button type="button" class="btn btn-primary" id="comment-update-btn"
          >수정 완료</button>
          -->
        </form>
      </div>
      
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary"
            data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary"
            id="comment-update-btn">Save changes</button>
      </div>
      
    </div>
  </div>
</div>


<!-- 모달 이벤트 처리 (다이얼로그가 화면 나타날때 해야할 일)
     수정할 자료를 입력받아서 modal div tag 에 불러오기
 -->
<script>

  // 모달창을 찾는다
  const commentEditModal = document.querySelector('#comment-edit-modal')
  
  // 이벤트 연결 : show.bs.modal - modal 화면이 그려지기 전
  commentEditModal.addEventListener( 'show.bs.modal', (event) => {

    //alert('show.bs.modal')
    //console.dir( commentEditModal )
    //console.dir( event )
    
    // 1. 트리거 버튼 선택
    const triggerBtn = event.relatedTarget;
    
    // 2. 데이터 가져오기
    let id = triggerBtn.getAttribute("data-bs-id")
    let nickname = triggerBtn.getAttribute("data-bs-nickname")
    let body = triggerBtn.getAttribute("data-bs-body")
    let articleId = triggerBtn.getAttribute("data-bs-article-id")
    
    let cmt = `id:${id}, nickname:${nickname}, body:${body}, articleId:${articleId}`
    
    alert( cmt )
    
    // 3. 수정 폼에 데이터 집어넣기(옮기기)
    document.querySelector('#edit-comment-id').value          = id;
    document.querySelector('#edit-comment-article-id').value  = articleId;
    document.querySelector('#edit-comment-nickname').value    = nickname;
    document.querySelector('#edit-comment-body').value        = body;
      
  } )

  // 이벤트 연결 : shown.bs.modal - modal 화면이 그려진 후
  commentEditModal.addEventListener( 'shown.bs.modal', (event) => {
    //alert('shown.bs.modal')
  } )

</script>


<!-- 댓글 수정 버튼 클릭 : Save changes 가 클릭되면 -->
<script>

  // Save changes 버튼 클릭
  const commentUpdateBtn = document.querySelector('#comment-update-btn')
  
  // 이벤트 연결
  commentUpdateBtn.addEventListener( 'click', ( event ) => {
  
    //console.dir(commentUpdateBtn)
    
    const comment = {
        nickname : document.querySelector('#edit-comment-nickname').value ,
        body : document.querySelector('#edit-comment-body').value ,
        article_id : document.querySelector('#edit-comment-article-id').value ,
        id : document.querySelector('#edit-comment-id').value
    }
    let url = '/api/comments/' + comment.id;
    //let url = `http://localhost:9090/api/comments/${id}`;
    
    const params = {
          method : 'PATCH',
          headers : {"Content-Type" : "application/json"},
          body : JSON.stringify( comment )
      }
      
    // Rest API 를 호출하라
    // 넘어갈 주소(url) 및 파라미터 필요
    fetch(url, params)
          .then( response => {
          
              console.log(response)
          
              const msg = (response.ok) ? "댓글이 수정되었습니다"
                                        : "댓글 수정 실패!...";
              alert(msg);
              // 현재 페이지 새로 고침
              window.location.reload();
              
          } )
  
  })

</script>


<!-- 댓글 삭제 -->
<script>



</script>
















