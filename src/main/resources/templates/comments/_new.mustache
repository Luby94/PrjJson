<div class="card m-2" id="comments-new">
  <div class="card-body">
    <!-- 댓글 작성 폼 -->
    <form>
    
      <!-- hidden 정보 -->
      {{ #article }}
      <input type="hidden" value="{{ id }}" 
       id="new-comment-id" />
      {{ /article }}
    
      <!-- 닉네임 -->
      <div class="mb-3">
        <label class="form-label">닉네임</label>
        <label>
          <input type="text" class="form-control"
           id="new-comment-nickname" />
        </label>
      </div>
      
      <!-- 댓글 본문 -->
      <div class="mb-3">
        <label class="form-label">댓글 내용</label>
        <label>
          <textarea type="text" class="form-control" rows="3"
           id="new-comment-body">
          </textarea>
        </label>
        
      <!-- 전송 버튼 -->
      <button type="button" class="btn btn-sm btn-primary"
       id="comment-create-btn" >작성</button> 
        
      </div>
    
    </form>
  </div>
</div>

<!-- 새글 쓰기 -->
<script>

  const commentCreateBtnEl = document.getElementById('comment-create-btn');
  
  commentCreateBtnEl.addEventListener('click', () => {
      
      // {{idx}} : ArticleController 의 Pathvariable 의 idx - mustache 파일에서도 사용가능하다 
      let url = 'http://localhost:9090/api/articles/{{idx}}/comments';
      
      // js 객체
      const comment = {
          // 새 댓글의 nickname
          nickname : document.querySelector('#new-comment-nickname').value ,
          // 새 글의 본문
          body : document.querySelector('#new-comment-body').value ,
          // 부모 게시글의 id
          article_id : document.querySelector('#new-comment-id').value
      }
      
      const params = {
          method : 'POST',
          headers : {"Content-Type" : "application/json"},
          body : JSON.stringify( comment )
      }
      fetch(url, params)
          .then( response => {
              
              console.dir(response);
              console.log(response);
              
              // 등록된 댓글의 번호(아래 msg 생성 시 필요)
              //let cid = response.id;
              
              // 상태코드 체크 : CommentApiController 內 2.댓글생성 內 return ResponseEntity.status(HttpStatus.OK).body( dto );
              const msg = (response.ok) ? "댓글이 등록되었습니다"
                                        : "댓글 등록 실패!...";
              alert(msg);
              // 현재 페이지 새로 고침
              window.location.reload();
              
          } )
      
  });

</script>















